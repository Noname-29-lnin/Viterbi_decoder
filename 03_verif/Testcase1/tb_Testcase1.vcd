$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $scope module tb_Testcase1 $end
   $var wire 32 z SIZE_DATA_IN [31:0] $end
   $var wire 32 { SIZE_DATA_OUT [31:0] $end
   $var wire 32 | CLK_PERIOD [31:0] $end
   $var wire 1 s clk $end
   $var wire 1 # rst_n $end
   $var wire 1 $ start $end
   $var wire 16 % data_in [15:0] $end
   $var wire 8 g data_out [7:0] $end
   $var wire 1 h done $end
   $var wire 32 & error_count [31:0] $end
   $var wire 32 ' test_case [31:0] $end
   $scope module dut $end
    $var wire 32 z SIZE_DATA_IN [31:0] $end
    $var wire 32 { SIZE_DATA_OUT [31:0] $end
    $var wire 32 } SIZE_PISO [31:0] $end
    $var wire 32 ~ SIZE_SIPO [31:0] $end
    $var wire 1 s i_clk $end
    $var wire 1 # i_rst_n $end
    $var wire 1 $ i_start $end
    $var wire 16 % i_data [15:0] $end
    $var wire 8 g o_data [7:0] $end
    $var wire 1 h o_done $end
    $var wire 2 t w_data_PISO [1:0] $end
    $var wire 1 u w_valid_PISO $end
    $var wire 1 @ w_valid_VD $end
    $var wire 1 i w_data_SIPO [0:0] $end
    $var wire 1 h w_done_SIPO $end
    $scope module PISO_unit $end
     $var wire 32 z SIZE_DATA_IN [31:0] $end
     $var wire 32 } SIZE_DATA_OUT [31:0] $end
     $var wire 1 s i_clk $end
     $var wire 1 # i_rst_n $end
     $var wire 1 $ i_start $end
     $var wire 16 % i_data [15:0] $end
     $var wire 2 t o_data [1:0] $end
     $var wire 1 u o_valid $end
     $var wire 1 A o_done $end
     $var wire 32 { DEPTH [31:0] $end
     $var wire 32 !! SIZE_DEPTH [31:0] $end
     $var wire 2 ( shift_reg[0] [1:0] $end
     $var wire 2 ) shift_reg[1] [1:0] $end
     $var wire 2 * shift_reg[2] [1:0] $end
     $var wire 2 + shift_reg[3] [1:0] $end
     $var wire 2 , shift_reg[4] [1:0] $end
     $var wire 2 - shift_reg[5] [1:0] $end
     $var wire 2 . shift_reg[6] [1:0] $end
     $var wire 2 / shift_reg[7] [1:0] $end
     $var wire 3 j count [2:0] $end
     $var wire 3 v ncount [2:0] $end
     $var wire 1 w w_update_count $end
     $var wire 1 B w_count $end
     $var wire 1 u w_count_next $end
     $var wire 2 k w_output [1:0] $end
     $var wire 1 l w_done $end
    $upscope $end
    $scope module SIPO_unit $end
     $var wire 32 ~ SIZE_DATA_IN [31:0] $end
     $var wire 32 { SIZE_DATA_OUT [31:0] $end
     $var wire 1 s i_clk $end
     $var wire 1 # i_rst_n $end
     $var wire 1 @ i_start $end
     $var wire 1 i i_data [0:0] $end
     $var wire 8 g o_data [7:0] $end
     $var wire 1 h o_done $end
     $var wire 32 { DEPTH [31:0] $end
     $var wire 32 !! SIZE_DEPTH [31:0] $end
     $var wire 1 C shift_reg[0] [0:0] $end
     $var wire 1 D shift_reg[1] [0:0] $end
     $var wire 1 E shift_reg[2] [0:0] $end
     $var wire 1 F shift_reg[3] [0:0] $end
     $var wire 1 G shift_reg[4] [0:0] $end
     $var wire 1 H shift_reg[5] [0:0] $end
     $var wire 1 I shift_reg[6] [0:0] $end
     $var wire 1 J shift_reg[7] [0:0] $end
     $var wire 3 m count [2:0] $end
     $var wire 3 x ncount [2:0] $end
     $var wire 1 n w_update_count $end
     $var wire 1 K w_count $end
     $var wire 1 y w_count_next $end
     $var wire 1 i w_idata [0:0] $end
     $var wire 8 o w_odata [7:0] $end
     $var wire 1 p w_done $end
     $scope module proc_shift_count $end
      $scope module unnamedblk1 $end
       $var wire 32 L i [31:0] $end
      $upscope $end
     $upscope $end
    $upscope $end
    $scope module VD_unit $end
     $var wire 1 s i_clk $end
     $var wire 1 # i_rst_n $end
     $var wire 1 u i_valid $end
     $var wire 2 t i_data [1:0] $end
     $var wire 1 i o_decision $end
     $var wire 1 @ o_valid $end
     $var wire 2 M w_iBM_0 [1:0] $end
     $var wire 2 N w_iBM_1 [1:0] $end
     $var wire 2 O w_iBM_2 [1:0] $end
     $var wire 2 P w_iBM_3 [1:0] $end
     $var wire 2 0 w_oBM_0 [1:0] $end
     $var wire 2 1 w_oBM_1 [1:0] $end
     $var wire 2 2 w_oBM_2 [1:0] $end
     $var wire 2 3 w_oBM_3 [1:0] $end
     $var wire 2 Q w_iPM_0 [1:0] $end
     $var wire 2 R w_iPM_1 [1:0] $end
     $var wire 2 S w_iPM_2 [1:0] $end
     $var wire 2 T w_iPM_3 [1:0] $end
     $var wire 2 U w_oPM_0 [1:0] $end
     $var wire 2 V w_oPM_1 [1:0] $end
     $var wire 2 W w_oPM_2 [1:0] $end
     $var wire 2 X w_oPM_3 [1:0] $end
     $var wire 1 @ w_valid $end
     $scope module ACSU $end
      $var wire 2 M i_BM_0 [1:0] $end
      $var wire 2 N i_BM_1 [1:0] $end
      $var wire 2 O i_BM_2 [1:0] $end
      $var wire 2 P i_BM_3 [1:0] $end
      $var wire 2 Q i_PM_0 [1:0] $end
      $var wire 2 R i_PM_1 [1:0] $end
      $var wire 2 S i_PM_2 [1:0] $end
      $var wire 2 T i_PM_3 [1:0] $end
      $var wire 2 U o_PM_0 [1:0] $end
      $var wire 2 V o_PM_1 [1:0] $end
      $var wire 2 W o_PM_2 [1:0] $end
      $var wire 2 X o_PM_3 [1:0] $end
      $var wire 2 U w_PM_0 [1:0] $end
      $var wire 2 V w_PM_1 [1:0] $end
      $var wire 2 W w_PM_2 [1:0] $end
      $var wire 2 X w_PM_3 [1:0] $end
      $scope module ACS_0 $end
       $var wire 2 M i_BM_0 [1:0] $end
       $var wire 2 P i_BM_1 [1:0] $end
       $var wire 2 Q i_PM_0 [1:0] $end
       $var wire 2 R i_PM_1 [1:0] $end
       $var wire 2 U o_PM [1:0] $end
       $var wire 2 Y w_metric_path_0 [1:0] $end
       $var wire 2 Z w_metric_path_1 [1:0] $end
       $var wire 1 [ w_compare_less $end
       $scope module ADD0 $end
        $var wire 2 M i_BM [1:0] $end
        $var wire 2 Q i_PM [1:0] $end
        $var wire 2 Y o_PM [1:0] $end
       $upscope $end
       $scope module ADD1 $end
        $var wire 2 P i_BM [1:0] $end
        $var wire 2 R i_PM [1:0] $end
        $var wire 2 Z o_PM [1:0] $end
       $upscope $end
       $scope module CP $end
        $var wire 2 Y i_metric_path_0 [1:0] $end
        $var wire 2 Z i_metric_path_1 [1:0] $end
        $var wire 1 [ o_compare_less $end
       $upscope $end
      $upscope $end
      $scope module ACS_1 $end
       $var wire 2 O i_BM_0 [1:0] $end
       $var wire 2 N i_BM_1 [1:0] $end
       $var wire 2 S i_PM_0 [1:0] $end
       $var wire 2 T i_PM_1 [1:0] $end
       $var wire 2 V o_PM [1:0] $end
       $var wire 2 \ w_metric_path_0 [1:0] $end
       $var wire 2 ] w_metric_path_1 [1:0] $end
       $var wire 1 ^ w_compare_less $end
       $scope module ADD0 $end
        $var wire 2 O i_BM [1:0] $end
        $var wire 2 S i_PM [1:0] $end
        $var wire 2 \ o_PM [1:0] $end
       $upscope $end
       $scope module ADD1 $end
        $var wire 2 N i_BM [1:0] $end
        $var wire 2 T i_PM [1:0] $end
        $var wire 2 ] o_PM [1:0] $end
       $upscope $end
       $scope module CP $end
        $var wire 2 \ i_metric_path_0 [1:0] $end
        $var wire 2 ] i_metric_path_1 [1:0] $end
        $var wire 1 ^ o_compare_less $end
       $upscope $end
      $upscope $end
      $scope module ACS_2 $end
       $var wire 2 P i_BM_0 [1:0] $end
       $var wire 2 M i_BM_1 [1:0] $end
       $var wire 2 Q i_PM_0 [1:0] $end
       $var wire 2 R i_PM_1 [1:0] $end
       $var wire 2 W o_PM [1:0] $end
       $var wire 2 _ w_metric_path_0 [1:0] $end
       $var wire 2 ` w_metric_path_1 [1:0] $end
       $var wire 1 a w_compare_less $end
       $scope module ADD0 $end
        $var wire 2 P i_BM [1:0] $end
        $var wire 2 Q i_PM [1:0] $end
        $var wire 2 _ o_PM [1:0] $end
       $upscope $end
       $scope module ADD1 $end
        $var wire 2 M i_BM [1:0] $end
        $var wire 2 R i_PM [1:0] $end
        $var wire 2 ` o_PM [1:0] $end
       $upscope $end
       $scope module CP $end
        $var wire 2 _ i_metric_path_0 [1:0] $end
        $var wire 2 ` i_metric_path_1 [1:0] $end
        $var wire 1 a o_compare_less $end
       $upscope $end
      $upscope $end
      $scope module ACS_3 $end
       $var wire 2 N i_BM_0 [1:0] $end
       $var wire 2 O i_BM_1 [1:0] $end
       $var wire 2 S i_PM_0 [1:0] $end
       $var wire 2 T i_PM_1 [1:0] $end
       $var wire 2 X o_PM [1:0] $end
       $var wire 2 b w_metric_path_0 [1:0] $end
       $var wire 2 c w_metric_path_1 [1:0] $end
       $var wire 1 d w_compare_less $end
       $scope module ADD0 $end
        $var wire 2 N i_BM [1:0] $end
        $var wire 2 S i_PM [1:0] $end
        $var wire 2 b o_PM [1:0] $end
       $upscope $end
       $scope module ADD1 $end
        $var wire 2 O i_BM [1:0] $end
        $var wire 2 T i_PM [1:0] $end
        $var wire 2 c o_PM [1:0] $end
       $upscope $end
       $scope module CP $end
        $var wire 2 b i_metric_path_0 [1:0] $end
        $var wire 2 c i_metric_path_1 [1:0] $end
        $var wire 1 d o_compare_less $end
       $upscope $end
      $upscope $end
     $upscope $end
     $scope module BMU $end
      $var wire 2 t i_data [1:0] $end
      $var wire 2 0 o_BM_0 [1:0] $end
      $var wire 2 1 o_BM_1 [1:0] $end
      $var wire 2 2 o_BM_2 [1:0] $end
      $var wire 2 3 o_BM_3 [1:0] $end
      $var wire 2 0 w_BM_0 [1:0] $end
      $var wire 2 1 w_BM_1 [1:0] $end
      $var wire 2 2 w_BM_2 [1:0] $end
      $var wire 2 3 w_BM_3 [1:0] $end
      $scope module HD0 $end
       $var wire 2 t i_data [1:0] $end
       $var wire 2 "! i_exp_code [1:0] $end
       $var wire 2 0 o_hamming_distance [1:0] $end
       $var wire 1 4 w_data_0 $end
       $var wire 1 5 w_data_1 $end
       $scope module FA $end
        $var wire 1 4 i_a $end
        $var wire 1 5 i_b $end
        $var wire 1 #! i_c $end
        $var wire 1 6 o_s $end
        $var wire 1 7 o_c $end
       $upscope $end
      $upscope $end
      $scope module HD1 $end
       $var wire 2 t i_data [1:0] $end
       $var wire 2 $! i_exp_code [1:0] $end
       $var wire 2 1 o_hamming_distance [1:0] $end
       $var wire 1 8 w_data_0 $end
       $var wire 1 5 w_data_1 $end
       $scope module FA $end
        $var wire 1 8 i_a $end
        $var wire 1 5 i_b $end
        $var wire 1 #! i_c $end
        $var wire 1 9 o_s $end
        $var wire 1 : o_c $end
       $upscope $end
      $upscope $end
      $scope module HD2 $end
       $var wire 2 t i_data [1:0] $end
       $var wire 2 %! i_exp_code [1:0] $end
       $var wire 2 2 o_hamming_distance [1:0] $end
       $var wire 1 4 w_data_0 $end
       $var wire 1 ; w_data_1 $end
       $scope module FA $end
        $var wire 1 4 i_a $end
        $var wire 1 ; i_b $end
        $var wire 1 #! i_c $end
        $var wire 1 < o_s $end
        $var wire 1 = o_c $end
       $upscope $end
      $upscope $end
      $scope module HD3 $end
       $var wire 2 t i_data [1:0] $end
       $var wire 2 &! i_exp_code [1:0] $end
       $var wire 2 3 o_hamming_distance [1:0] $end
       $var wire 1 8 w_data_0 $end
       $var wire 1 ; w_data_1 $end
       $scope module FA $end
        $var wire 1 8 i_a $end
        $var wire 1 ; i_b $end
        $var wire 1 #! i_c $end
        $var wire 1 > o_s $end
        $var wire 1 ? o_c $end
       $upscope $end
      $upscope $end
     $upscope $end
     $scope module BUFFER $end
      $var wire 1 s i_clk $end
      $var wire 1 # i_rst_n $end
      $var wire 1 u i_valid $end
      $var wire 2 0 i_BM_0 [1:0] $end
      $var wire 2 1 i_BM_1 [1:0] $end
      $var wire 2 2 i_BM_2 [1:0] $end
      $var wire 2 3 i_BM_3 [1:0] $end
      $var wire 2 U i_PM_0 [1:0] $end
      $var wire 2 V i_PM_1 [1:0] $end
      $var wire 2 W i_PM_2 [1:0] $end
      $var wire 2 X i_PM_3 [1:0] $end
      $var wire 2 M o_BM_0 [1:0] $end
      $var wire 2 N o_BM_1 [1:0] $end
      $var wire 2 O o_BM_2 [1:0] $end
      $var wire 2 P o_BM_3 [1:0] $end
      $var wire 2 Q o_PM_0 [1:0] $end
      $var wire 2 R o_PM_1 [1:0] $end
      $var wire 2 S o_PM_2 [1:0] $end
      $var wire 2 T o_PM_3 [1:0] $end
      $var wire 1 @ o_valid $end
     $upscope $end
     $scope module SPMU $end
      $var wire 1 s i_clk $end
      $var wire 1 # i_rst_n $end
      $var wire 1 @ i_valid $end
      $var wire 2 U i_PM_0 [1:0] $end
      $var wire 2 V i_PM_1 [1:0] $end
      $var wire 2 W i_PM_2 [1:0] $end
      $var wire 2 X i_PM_3 [1:0] $end
      $var wire 1 i o_decision $end
      $var wire 1 e w_compare_0 $end
      $var wire 1 f w_compare_1 $end
      $scope module CP0 $end
       $var wire 2 U i_metric_path_0 [1:0] $end
       $var wire 2 W i_metric_path_1 [1:0] $end
       $var wire 1 e o_compare_less $end
      $upscope $end
      $scope module CP1 $end
       $var wire 2 V i_metric_path_0 [1:0] $end
       $var wire 2 X i_metric_path_1 [1:0] $end
       $var wire 1 f o_compare_less $end
      $upscope $end
      $scope module u_state_machine $end
       $var wire 1 s i_clk $end
       $var wire 1 # i_rst_n $end
       $var wire 1 @ i_valid $end
       $var wire 1 e i_compare_0 $end
       $var wire 1 f i_compare_1 $end
       $var wire 1 i o_decision $end
       $var wire 2 "! S0 [1:0] $end
       $var wire 2 $! S1 [1:0] $end
       $var wire 2 %! S2 [1:0] $end
       $var wire 2 &! S3 [1:0] $end
       $var wire 2 q state [1:0] $end
       $var wire 2 r nstate [1:0] $end
       $scope module NSL $end
        $var wire 1 @ i_valid $end
        $var wire 1 e i_compare_0 $end
        $var wire 1 f i_compare_1 $end
        $var wire 2 q i_pre_state [1:0] $end
        $var wire 2 r o_next_state [1:0] $end
        $var wire 2 "! S0 [1:0] $end
        $var wire 2 $! S1 [1:0] $end
        $var wire 2 %! S2 [1:0] $end
        $var wire 2 &! S3 [1:0] $end
       $upscope $end
       $scope module OL $end
        $var wire 2 q i_curr_state [1:0] $end
        $var wire 1 i o_decision_bit $end
        $var wire 2 "! S0 [1:0] $end
        $var wire 2 $! S1 [1:0] $end
        $var wire 2 %! S2 [1:0] $end
        $var wire 2 &! S3 [1:0] $end
       $upscope $end
       $scope module SM $end
        $var wire 1 s i_clk $end
        $var wire 1 # i_rst_n $end
        $var wire 2 r i_next_state [1:0] $end
        $var wire 2 q o_curr_state [1:0] $end
        $var wire 2 "! S0 [1:0] $end
        $var wire 2 $! S1 [1:0] $end
        $var wire 2 %! S2 [1:0] $end
        $var wire 2 &! S3 [1:0] $end
       $upscope $end
      $upscope $end
     $upscope $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
b0000000000000000 %
b00000000000000000000000000000000 &
b00000000000000000000000000000001 '
b00 (
b00 )
b00 *
b00 +
b00 ,
b00 -
b00 .
b00 /
b00 0
b01 1
b01 2
b10 3
04
05
06
07
18
19
0:
1;
1<
0=
0>
1?
0@
0A
0B
0C
0D
0E
0F
0G
0H
0I
0J
0K
b00000000000000000000000000000000 L
b00 M
b00 N
b00 O
b00 P
b00 Q
b00 R
b00 S
b00 T
b00 U
b00 V
b00 W
b00 X
b00 Y
b00 Z
1[
b00 \
b00 ]
1^
b00 _
b00 `
1a
b00 b
b00 c
1d
1e
1f
b00000000 g
0h
0i
b000 j
b00 k
0l
b000 m
0n
b00000000 o
0p
b00 q
b00 r
0s
b00 t
0u
b000 v
0w
b000 x
0y
b00000000000000000000000000010000 z
b00000000000000000000000000001000 {
b00000000000000000000000000001010 |
b00000000000000000000000000000010 }
b00000000000000000000000000000001 ~
b00000000000000000000000000000011 !!
b00 "!
0#!
b01 $!
b10 %!
b11 &!
#5000
b00000000000000000000000000001000 L
b11 R
b11 S
b11 T
b11 V
b11 X
b11 Z
b11 \
b11 ]
b11 `
b11 b
b11 c
1s
#10000
0s
#15000
1s
#20000
1#
0s
#25000
1s
#30000
1$
b1010010110100101 %
b01 (
b01 )
b10 *
b10 +
b01 ,
b01 -
b10 .
b10 /
0s
1w
#35000
b01 0
b00 1
b10 2
b01 3
14
16
08
09
0<
1=
1>
0?
1B
b01 k
1s
b01 t
1u
b001 v
#40000
0s
#45000
1@
b01 M
b10 O
b01 P
b00 S
b01 U
b10 V
b01 W
b00 X
b01 Y
b10 \
b01 _
b00 b
0f
b001 j
1n
1s
b010 v
#50000
0s
#55000
1K
b01 Q
b10 R
b01 S
b00 T
b10 U
b00 V
b10 W
b01 X
b10 Y
b11 \
b00 ]
0^
b10 _
b01 b
b10 c
1f
b010 j
1s
b011 v
b001 x
1y
#60000
0s
#65000
b10 1
b00 2
04
15
18
1:
0;
0=
b10 Q
b00 R
b10 S
b01 T
b01 U
b01 V
b01 W
b10 X
b11 Y
b01 Z
0[
b01 ]
b11 _
b01 `
0a
b10 b
b11 c
b011 j
b10 k
b001 m
1s
b10 t
b100 v
b010 x
#70000
0s
#75000
b10 N
b00 O
b01 Q
b01 R
b01 S
b10 T
b10 U
b10 W
b10 Y
b10 Z
1[
b01 \
b11 ]
1^
b10 _
b10 `
1a
b11 b
b10 c
0d
b100 j
b010 m
1s
b101 v
b011 x
#80000
0s
#85000
b00 1
b10 2
14
05
08
0:
1;
1=
b10 Q
b10 S
b10 V
b11 Y
0[
b10 \
b11 _
0a
b101 j
b01 k
b011 m
1s
b01 t
b110 v
b100 x
#90000
0s
#95000
b00 N
b10 O
b10 R
b11 U
b11 W
b11 Z
1[
b11 \
b10 ]
0^
b11 `
1a
b10 b
b11 c
1d
b110 j
b100 m
1s
b111 v
b101 x
#100000
0s
#105000
b10 1
b00 2
04
15
18
1:
0;
0=
b11 Q
b11 S
b11 X
b11 b
b111 j
b10 k
1l
b101 m
1s
b10 t
b000 v
b110 x
#110000
0s
#115000
b00 0
b01 1
b01 2
b10 3
05
06
19
0:
1;
1<
0>
1?
1A
b10 N
b00 O
b11 T
b11 V
b11 ]
1^
b000 j
0l
b110 m
1s
b00 t
0u
0w
b111 x
#120000
0s
#125000
0@
0A
0B
b01 k
b111 m
0n
1p
1s
1w
0y
#130000
0s
#135000
b01 0
b00 1
b10 2
b01 3
14
16
08
09
0<
1=
1>
0?
1B
0K
1h
1s
b01 t
1u
b001 v
#140000
0s
