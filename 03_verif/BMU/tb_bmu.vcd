$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $scope module tb_bmu $end
   $var wire 1 : i_clk $end
   $var wire 1 # i_rst_n $end
   $var wire 1 5 w_valid $end
   $var wire 2 $ w_idata [1:0] $end
   $var wire 2 6 w_BM_0 [1:0] $end
   $var wire 2 7 w_BM_1 [1:0] $end
   $var wire 2 8 w_BM_2 [1:0] $end
   $var wire 2 9 w_BM_3 [1:0] $end
   $scope module uut $end
    $var wire 1 : i_clk $end
    $var wire 1 # i_rst_n $end
    $var wire 2 $ i_data [1:0] $end
    $var wire 2 6 o_BM_0 [1:0] $end
    $var wire 2 7 o_BM_1 [1:0] $end
    $var wire 2 8 o_BM_2 [1:0] $end
    $var wire 2 9 o_BM_3 [1:0] $end
    $var wire 1 5 o_valid $end
    $var wire 2 % w_BM_0 [1:0] $end
    $var wire 2 & w_BM_1 [1:0] $end
    $var wire 2 ' w_BM_2 [1:0] $end
    $var wire 2 ( w_BM_3 [1:0] $end
    $scope module HD0 $end
     $var wire 2 $ i_data [1:0] $end
     $var wire 2 ; i_exp_code [1:0] $end
     $var wire 2 % o_hamming_distance [1:0] $end
     $var wire 1 ) w_data_0 $end
     $var wire 1 * w_data_1 $end
     $scope module FA $end
      $var wire 1 ) i_a $end
      $var wire 1 * i_b $end
      $var wire 1 < i_c $end
      $var wire 1 + o_s $end
      $var wire 1 , o_c $end
     $upscope $end
    $upscope $end
    $scope module HD1 $end
     $var wire 2 $ i_data [1:0] $end
     $var wire 2 = i_exp_code [1:0] $end
     $var wire 2 & o_hamming_distance [1:0] $end
     $var wire 1 - w_data_0 $end
     $var wire 1 * w_data_1 $end
     $scope module FA $end
      $var wire 1 - i_a $end
      $var wire 1 * i_b $end
      $var wire 1 < i_c $end
      $var wire 1 . o_s $end
      $var wire 1 / o_c $end
     $upscope $end
    $upscope $end
    $scope module HD2 $end
     $var wire 2 $ i_data [1:0] $end
     $var wire 2 > i_exp_code [1:0] $end
     $var wire 2 ' o_hamming_distance [1:0] $end
     $var wire 1 ) w_data_0 $end
     $var wire 1 0 w_data_1 $end
     $scope module FA $end
      $var wire 1 ) i_a $end
      $var wire 1 0 i_b $end
      $var wire 1 < i_c $end
      $var wire 1 1 o_s $end
      $var wire 1 2 o_c $end
     $upscope $end
    $upscope $end
    $scope module HD3 $end
     $var wire 2 $ i_data [1:0] $end
     $var wire 2 ? i_exp_code [1:0] $end
     $var wire 2 ( o_hamming_distance [1:0] $end
     $var wire 1 - w_data_0 $end
     $var wire 1 0 w_data_1 $end
     $scope module FA $end
      $var wire 1 - i_a $end
      $var wire 1 0 i_b $end
      $var wire 1 < i_c $end
      $var wire 1 3 o_s $end
      $var wire 1 4 o_c $end
     $upscope $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
b00 $
b00 %
b01 &
b01 '
b10 (
0)
0*
0+
0,
1-
1.
0/
10
11
02
03
14
05
b00 6
b00 7
b00 8
b00 9
0:
b00 ;
0<
b01 =
b10 >
b11 ?
#5000
1:
#10000
1#
0:
#15000
15
b01 7
b01 8
b10 9
1:
#20000
0:
#25000
1:
#30000
0:
#35000
b01 $
b01 %
b00 &
b10 '
b01 (
1)
1+
0-
0.
01
12
13
04
b01 6
b00 7
b10 8
b01 9
1:
#40000
0:
#45000
1:
#50000
0:
#55000
b10 $
b10 &
b00 '
0)
1*
1-
1/
00
02
b10 7
b00 8
1:
#60000
0:
#65000
1:
#70000
0:
#75000
b11 $
b10 %
b01 &
b01 '
b00 (
1)
0+
1,
0-
1.
0/
11
03
b10 6
b01 7
b01 8
b00 9
1:
#80000
0:
#85000
1:
#90000
0:
#95000
1:
#100000
0:
