$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $scope module tb_acsu $end
   $var wire 1 > i_clk $end
   $var wire 1 # i_rst_n $end
   $var wire 1 $ i_valid $end
   $var wire 1 ? o_valid $end
   $var wire 2 % i_BM_0 [1:0] $end
   $var wire 2 & i_BM_1 [1:0] $end
   $var wire 2 ' i_BM_2 [1:0] $end
   $var wire 2 ( i_BM_3 [1:0] $end
   $var wire 2 @ o_BM_0 [1:0] $end
   $var wire 2 A o_BM_1 [1:0] $end
   $var wire 2 B o_BM_2 [1:0] $end
   $var wire 2 C o_BM_3 [1:0] $end
   $var wire 2 * i_PM_0 [1:0] $end
   $var wire 2 + i_PM_1 [1:0] $end
   $var wire 2 , i_PM_2 [1:0] $end
   $var wire 2 - i_PM_3 [1:0] $end
   $var wire 2 . o_PM_0 [1:0] $end
   $var wire 2 / o_PM_1 [1:0] $end
   $var wire 2 0 o_PM_2 [1:0] $end
   $var wire 2 1 o_PM_3 [1:0] $end
   $scope module ACSU $end
    $var wire 2 @ i_BM_0 [1:0] $end
    $var wire 2 A i_BM_1 [1:0] $end
    $var wire 2 B i_BM_2 [1:0] $end
    $var wire 2 C i_BM_3 [1:0] $end
    $var wire 2 * i_PM_0 [1:0] $end
    $var wire 2 + i_PM_1 [1:0] $end
    $var wire 2 , i_PM_2 [1:0] $end
    $var wire 2 - i_PM_3 [1:0] $end
    $var wire 2 . o_PM_0 [1:0] $end
    $var wire 2 / o_PM_1 [1:0] $end
    $var wire 2 0 o_PM_2 [1:0] $end
    $var wire 2 1 o_PM_3 [1:0] $end
    $var wire 2 . w_PM_0 [1:0] $end
    $var wire 2 / w_PM_1 [1:0] $end
    $var wire 2 0 w_PM_2 [1:0] $end
    $var wire 2 1 w_PM_3 [1:0] $end
    $scope module ACS_0 $end
     $var wire 2 @ i_BM_0 [1:0] $end
     $var wire 2 C i_BM_1 [1:0] $end
     $var wire 2 * i_PM_0 [1:0] $end
     $var wire 2 + i_PM_1 [1:0] $end
     $var wire 2 . o_PM [1:0] $end
     $var wire 2 2 w_metric_path_0 [1:0] $end
     $var wire 2 3 w_metric_path_1 [1:0] $end
     $var wire 1 4 w_compare_less $end
     $scope module ADD0 $end
      $var wire 2 @ i_BM [1:0] $end
      $var wire 2 * i_PM [1:0] $end
      $var wire 2 2 o_PM [1:0] $end
     $upscope $end
     $scope module ADD1 $end
      $var wire 2 C i_BM [1:0] $end
      $var wire 2 + i_PM [1:0] $end
      $var wire 2 3 o_PM [1:0] $end
     $upscope $end
     $scope module CP $end
      $var wire 2 2 i_metric_path_0 [1:0] $end
      $var wire 2 3 i_metric_path_1 [1:0] $end
      $var wire 1 4 o_compare_less $end
     $upscope $end
    $upscope $end
    $scope module ACS_1 $end
     $var wire 2 B i_BM_0 [1:0] $end
     $var wire 2 A i_BM_1 [1:0] $end
     $var wire 2 , i_PM_0 [1:0] $end
     $var wire 2 - i_PM_1 [1:0] $end
     $var wire 2 / o_PM [1:0] $end
     $var wire 2 5 w_metric_path_0 [1:0] $end
     $var wire 2 6 w_metric_path_1 [1:0] $end
     $var wire 1 7 w_compare_less $end
     $scope module ADD0 $end
      $var wire 2 B i_BM [1:0] $end
      $var wire 2 , i_PM [1:0] $end
      $var wire 2 5 o_PM [1:0] $end
     $upscope $end
     $scope module ADD1 $end
      $var wire 2 A i_BM [1:0] $end
      $var wire 2 - i_PM [1:0] $end
      $var wire 2 6 o_PM [1:0] $end
     $upscope $end
     $scope module CP $end
      $var wire 2 5 i_metric_path_0 [1:0] $end
      $var wire 2 6 i_metric_path_1 [1:0] $end
      $var wire 1 7 o_compare_less $end
     $upscope $end
    $upscope $end
    $scope module ACS_2 $end
     $var wire 2 C i_BM_0 [1:0] $end
     $var wire 2 @ i_BM_1 [1:0] $end
     $var wire 2 * i_PM_0 [1:0] $end
     $var wire 2 + i_PM_1 [1:0] $end
     $var wire 2 0 o_PM [1:0] $end
     $var wire 2 8 w_metric_path_0 [1:0] $end
     $var wire 2 9 w_metric_path_1 [1:0] $end
     $var wire 1 : w_compare_less $end
     $scope module ADD0 $end
      $var wire 2 C i_BM [1:0] $end
      $var wire 2 * i_PM [1:0] $end
      $var wire 2 8 o_PM [1:0] $end
     $upscope $end
     $scope module ADD1 $end
      $var wire 2 @ i_BM [1:0] $end
      $var wire 2 + i_PM [1:0] $end
      $var wire 2 9 o_PM [1:0] $end
     $upscope $end
     $scope module CP $end
      $var wire 2 8 i_metric_path_0 [1:0] $end
      $var wire 2 9 i_metric_path_1 [1:0] $end
      $var wire 1 : o_compare_less $end
     $upscope $end
    $upscope $end
    $scope module ACS_3 $end
     $var wire 2 A i_BM_0 [1:0] $end
     $var wire 2 B i_BM_1 [1:0] $end
     $var wire 2 , i_PM_0 [1:0] $end
     $var wire 2 - i_PM_1 [1:0] $end
     $var wire 2 1 o_PM [1:0] $end
     $var wire 2 ; w_metric_path_0 [1:0] $end
     $var wire 2 < w_metric_path_1 [1:0] $end
     $var wire 1 = w_compare_less $end
     $scope module ADD0 $end
      $var wire 2 A i_BM [1:0] $end
      $var wire 2 , i_PM [1:0] $end
      $var wire 2 ; o_PM [1:0] $end
     $upscope $end
     $scope module ADD1 $end
      $var wire 2 B i_BM [1:0] $end
      $var wire 2 - i_PM [1:0] $end
      $var wire 2 < o_PM [1:0] $end
     $upscope $end
     $scope module CP $end
      $var wire 2 ; i_metric_path_0 [1:0] $end
      $var wire 2 < i_metric_path_1 [1:0] $end
      $var wire 1 = o_compare_less $end
     $upscope $end
    $upscope $end
   $upscope $end
   $scope module PMU $end
    $var wire 32 D SIZE_DATA [31:0] $end
    $var wire 1 > i_clk $end
    $var wire 1 # i_rst_n $end
    $var wire 1 $ i_valid $end
    $var wire 2 . i_PM_0 [1:0] $end
    $var wire 2 / i_PM_1 [1:0] $end
    $var wire 2 0 i_PM_2 [1:0] $end
    $var wire 2 1 i_PM_3 [1:0] $end
    $var wire 2 * o_PM_0 [1:0] $end
    $var wire 2 + o_PM_1 [1:0] $end
    $var wire 2 , o_PM_2 [1:0] $end
    $var wire 2 - o_PM_3 [1:0] $end
   $upscope $end
   $scope module unnamedblk1 $end
    $var wire 32 ) i [31:0] $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
b00 %
b00 &
b00 '
b00 (
b00000000000000000000000000000000 )
b00 *
b00 +
b00 ,
b00 -
b00 .
b00 /
b00 0
b00 1
b00 2
b00 3
14
b00 5
b00 6
17
b00 8
b00 9
1:
b00 ;
b00 <
1=
0>
0?
b00 @
b00 A
b00 B
b00 C
b00000000000000000000000000000010 D
#5000
b11 +
b11 ,
b11 -
b11 /
b11 1
b11 3
b11 5
b11 6
b11 9
b11 ;
b11 <
1>
#10000
1#
1$
0>
#15000
b00 ,
b00 /
b00 1
b00 5
b00 ;
1>
#16000
#20000
0>
#25000
b00 +
b00 -
b00 3
b00 6
b00 9
b00 <
1>
#30000
0>
#35000
1>
#36000
#40000
0>
#45000
1>
#46000
#50000
0>
#55000
b01 %
b01 &
b01 '
b01 (
1>
#60000
0>
#65000
1>
#66000
#70000
0>
#75000
b00 %
b10 '
b11 (
1>
#80000
0>
#85000
1>
#86000
#90000
0>
#95000
b00 &
b00 (
1>
#100000
0>
#105000
1>
#106000
b00000000000000000000000000000001 )
#110000
0>
#115000
1>
#120000
0>
#125000
1>
#126000
b00000000000000000000000000000010 )
#130000
0>
#135000
b11 %
b11 &
b01 '
b01 (
1>
#140000
0>
#145000
1>
#146000
b00000000000000000000000000000011 )
#150000
0>
#155000
b01 %
b10 &
b10 '
1>
#160000
0>
#165000
1>
#166000
b00000000000000000000000000000100 )
#170000
0>
#175000
b10 %
b01 '
b00 (
1>
#180000
0>
#185000
1>
#186000
b00000000000000000000000000000101 )
#190000
0>
#195000
1>
#200000
0>
#205000
1>
#206000
