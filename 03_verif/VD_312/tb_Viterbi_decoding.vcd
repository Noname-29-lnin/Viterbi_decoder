$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $var wire 1 f Input_interface_block.i_clk $end
  $var wire 1 g Input_interface_block.i_rst_n $end
  $var wire 1 h Input_interface_block.i_start $end
  $var wire 16 i Input_interface_block.i_data [15:0] $end
  $var wire 2 j Input_interface_block.o_data [1:0] $end
  $var wire 1 k Input_interface_block.o_valid $end
  $var wire 1 l o_stop $end
  $var wire 1 m Output_interface_block.i_clk $end
  $var wire 1 n Output_interface_block.i_rst_n $end
  $var wire 1 o Output_interface_block.i_start $end
  $var wire 1 p i_valid $end
  $var wire 1 q Output_interface_block.i_data [0:0] $end
  $var wire 8 r Output_interface_block.o_data [7:0] $end
  $var wire 1 s Output_interface_block.o_valid $end
  $scope module Input_interface_block $end
   $var wire 32 w SIZE_IN [31:0] $end
   $var wire 32 x SIZE_OUT [31:0] $end
   $var wire 1 f i_clk $end
   $var wire 1 g i_rst_n $end
   $var wire 1 h i_start $end
   $var wire 16 i i_data [15:0] $end
   $var wire 2 j o_data [1:0] $end
   $var wire 1 k o_valid $end
   $var wire 1 l o_stop $end
   $var wire 4 t state [3:0] $end
   $scope module nsb $end
    $var wire 1 f i_clk $end
    $var wire 1 g i_rst_n $end
    $var wire 1 h i_start $end
    $var wire 4 t o_state [3:0] $end
    $var wire 1 k o_valid $end
    $var wire 1 l o_stop $end
    $var wire 4 t state [3:0] $end
    $var wire 4 u nstate [3:0] $end
   $upscope $end
   $scope module ob $end
    $var wire 32 w SIZE_IN [31:0] $end
    $var wire 32 x SIZE_OUT [31:0] $end
    $var wire 4 t i_state [3:0] $end
    $var wire 16 i i_data [15:0] $end
    $var wire 2 j o_data [1:0] $end
    $var wire 2 6 shift_reg[0] [1:0] $end
    $var wire 2 7 shift_reg[1] [1:0] $end
    $var wire 2 8 shift_reg[2] [1:0] $end
    $var wire 2 9 shift_reg[3] [1:0] $end
    $var wire 2 : shift_reg[4] [1:0] $end
    $var wire 2 ; shift_reg[5] [1:0] $end
    $var wire 2 < shift_reg[6] [1:0] $end
    $var wire 2 = shift_reg[7] [1:0] $end
   $upscope $end
  $upscope $end
  $scope module Output_interface_block $end
   $var wire 32 y SIZE_IN [31:0] $end
   $var wire 32 z SIZE_OUT [31:0] $end
   $var wire 1 m i_clk $end
   $var wire 1 n i_rst_n $end
   $var wire 1 o i_start $end
   $var wire 1 p i_valid $end
   $var wire 1 q i_data [0:0] $end
   $var wire 8 r o_data [7:0] $end
   $var wire 1 s o_valid $end
   $var wire 1 > shift_reg[0] [0:0] $end
   $var wire 1 ? shift_reg[1] [0:0] $end
   $var wire 1 @ shift_reg[2] [0:0] $end
   $var wire 1 A shift_reg[3] [0:0] $end
   $var wire 1 B shift_reg[4] [0:0] $end
   $var wire 1 C shift_reg[5] [0:0] $end
   $var wire 1 D shift_reg[6] [0:0] $end
   $var wire 1 E shift_reg[7] [0:0] $end
   $scope module unnamedblk1 $end
    $var wire 32 F i [31:0] $end
   $upscope $end
   $scope module unnamedblk2 $end
    $var wire 32 G i [31:0] $end
   $upscope $end
  $upscope $end
  $scope module tb_Viterbi_decoding $end
   $var wire 1 v i_clk $end
   $var wire 1 # i_rst_n $end
   $var wire 1 $ i_valid $end
   $var wire 2 % i_data [1:0] $end
   $var wire 1 H o_decision $end
   $var wire 1 I o_valid $end
   $scope module uut $end
    $var wire 1 v i_clk $end
    $var wire 1 # i_rst_n $end
    $var wire 1 $ i_valid $end
    $var wire 2 % i_data [1:0] $end
    $var wire 1 H o_decision $end
    $var wire 1 I o_valid $end
    $var wire 2 J w_iBM_0 [1:0] $end
    $var wire 2 K w_iBM_1 [1:0] $end
    $var wire 2 L w_iBM_2 [1:0] $end
    $var wire 2 M w_iBM_3 [1:0] $end
    $var wire 2 & w_oBM_0 [1:0] $end
    $var wire 2 ' w_oBM_1 [1:0] $end
    $var wire 2 ( w_oBM_2 [1:0] $end
    $var wire 2 ) w_oBM_3 [1:0] $end
    $var wire 2 N w_iPM_0 [1:0] $end
    $var wire 2 O w_iPM_1 [1:0] $end
    $var wire 2 P w_iPM_2 [1:0] $end
    $var wire 2 Q w_iPM_3 [1:0] $end
    $var wire 2 R w_oPM_0 [1:0] $end
    $var wire 2 S w_oPM_1 [1:0] $end
    $var wire 2 T w_oPM_2 [1:0] $end
    $var wire 2 U w_oPM_3 [1:0] $end
    $var wire 1 I w_valid $end
    $scope module ACSU $end
     $var wire 2 J i_BM_0 [1:0] $end
     $var wire 2 K i_BM_1 [1:0] $end
     $var wire 2 L i_BM_2 [1:0] $end
     $var wire 2 M i_BM_3 [1:0] $end
     $var wire 2 N i_PM_0 [1:0] $end
     $var wire 2 O i_PM_1 [1:0] $end
     $var wire 2 P i_PM_2 [1:0] $end
     $var wire 2 Q i_PM_3 [1:0] $end
     $var wire 2 R o_PM_0 [1:0] $end
     $var wire 2 S o_PM_1 [1:0] $end
     $var wire 2 T o_PM_2 [1:0] $end
     $var wire 2 U o_PM_3 [1:0] $end
     $var wire 2 R w_PM_0 [1:0] $end
     $var wire 2 S w_PM_1 [1:0] $end
     $var wire 2 T w_PM_2 [1:0] $end
     $var wire 2 U w_PM_3 [1:0] $end
     $scope module ACS_0 $end
      $var wire 2 J i_BM_0 [1:0] $end
      $var wire 2 M i_BM_1 [1:0] $end
      $var wire 2 N i_PM_0 [1:0] $end
      $var wire 2 O i_PM_1 [1:0] $end
      $var wire 2 R o_PM [1:0] $end
      $var wire 2 V w_metric_path_0 [1:0] $end
      $var wire 2 W w_metric_path_1 [1:0] $end
      $var wire 1 X w_compare_less $end
      $scope module ADD0 $end
       $var wire 2 J i_BM [1:0] $end
       $var wire 2 N i_PM [1:0] $end
       $var wire 2 V o_PM [1:0] $end
      $upscope $end
      $scope module ADD1 $end
       $var wire 2 M i_BM [1:0] $end
       $var wire 2 O i_PM [1:0] $end
       $var wire 2 W o_PM [1:0] $end
      $upscope $end
      $scope module CP $end
       $var wire 2 V i_metric_path_0 [1:0] $end
       $var wire 2 W i_metric_path_1 [1:0] $end
       $var wire 1 X o_compare_less $end
      $upscope $end
     $upscope $end
     $scope module ACS_1 $end
      $var wire 2 L i_BM_0 [1:0] $end
      $var wire 2 K i_BM_1 [1:0] $end
      $var wire 2 P i_PM_0 [1:0] $end
      $var wire 2 Q i_PM_1 [1:0] $end
      $var wire 2 S o_PM [1:0] $end
      $var wire 2 Y w_metric_path_0 [1:0] $end
      $var wire 2 Z w_metric_path_1 [1:0] $end
      $var wire 1 [ w_compare_less $end
      $scope module ADD0 $end
       $var wire 2 L i_BM [1:0] $end
       $var wire 2 P i_PM [1:0] $end
       $var wire 2 Y o_PM [1:0] $end
      $upscope $end
      $scope module ADD1 $end
       $var wire 2 K i_BM [1:0] $end
       $var wire 2 Q i_PM [1:0] $end
       $var wire 2 Z o_PM [1:0] $end
      $upscope $end
      $scope module CP $end
       $var wire 2 Y i_metric_path_0 [1:0] $end
       $var wire 2 Z i_metric_path_1 [1:0] $end
       $var wire 1 [ o_compare_less $end
      $upscope $end
     $upscope $end
     $scope module ACS_2 $end
      $var wire 2 M i_BM_0 [1:0] $end
      $var wire 2 J i_BM_1 [1:0] $end
      $var wire 2 N i_PM_0 [1:0] $end
      $var wire 2 O i_PM_1 [1:0] $end
      $var wire 2 T o_PM [1:0] $end
      $var wire 2 \ w_metric_path_0 [1:0] $end
      $var wire 2 ] w_metric_path_1 [1:0] $end
      $var wire 1 ^ w_compare_less $end
      $scope module ADD0 $end
       $var wire 2 M i_BM [1:0] $end
       $var wire 2 N i_PM [1:0] $end
       $var wire 2 \ o_PM [1:0] $end
      $upscope $end
      $scope module ADD1 $end
       $var wire 2 J i_BM [1:0] $end
       $var wire 2 O i_PM [1:0] $end
       $var wire 2 ] o_PM [1:0] $end
      $upscope $end
      $scope module CP $end
       $var wire 2 \ i_metric_path_0 [1:0] $end
       $var wire 2 ] i_metric_path_1 [1:0] $end
       $var wire 1 ^ o_compare_less $end
      $upscope $end
     $upscope $end
     $scope module ACS_3 $end
      $var wire 2 K i_BM_0 [1:0] $end
      $var wire 2 L i_BM_1 [1:0] $end
      $var wire 2 P i_PM_0 [1:0] $end
      $var wire 2 Q i_PM_1 [1:0] $end
      $var wire 2 U o_PM [1:0] $end
      $var wire 2 _ w_metric_path_0 [1:0] $end
      $var wire 2 ` w_metric_path_1 [1:0] $end
      $var wire 1 a w_compare_less $end
      $scope module ADD0 $end
       $var wire 2 K i_BM [1:0] $end
       $var wire 2 P i_PM [1:0] $end
       $var wire 2 _ o_PM [1:0] $end
      $upscope $end
      $scope module ADD1 $end
       $var wire 2 L i_BM [1:0] $end
       $var wire 2 Q i_PM [1:0] $end
       $var wire 2 ` o_PM [1:0] $end
      $upscope $end
      $scope module CP $end
       $var wire 2 _ i_metric_path_0 [1:0] $end
       $var wire 2 ` i_metric_path_1 [1:0] $end
       $var wire 1 a o_compare_less $end
      $upscope $end
     $upscope $end
    $upscope $end
    $scope module BMU $end
     $var wire 2 % i_data [1:0] $end
     $var wire 2 & o_BM_0 [1:0] $end
     $var wire 2 ' o_BM_1 [1:0] $end
     $var wire 2 ( o_BM_2 [1:0] $end
     $var wire 2 ) o_BM_3 [1:0] $end
     $var wire 2 & w_BM_0 [1:0] $end
     $var wire 2 ' w_BM_1 [1:0] $end
     $var wire 2 ( w_BM_2 [1:0] $end
     $var wire 2 ) w_BM_3 [1:0] $end
     $scope module HD0 $end
      $var wire 2 % i_data [1:0] $end
      $var wire 2 { i_exp_code [1:0] $end
      $var wire 2 & o_hamming_distance [1:0] $end
      $var wire 1 * w_data_0 $end
      $var wire 1 + w_data_1 $end
      $scope module FA $end
       $var wire 1 * i_a $end
       $var wire 1 + i_b $end
       $var wire 1 | i_c $end
       $var wire 1 , o_s $end
       $var wire 1 - o_c $end
      $upscope $end
     $upscope $end
     $scope module HD1 $end
      $var wire 2 % i_data [1:0] $end
      $var wire 2 } i_exp_code [1:0] $end
      $var wire 2 ' o_hamming_distance [1:0] $end
      $var wire 1 . w_data_0 $end
      $var wire 1 + w_data_1 $end
      $scope module FA $end
       $var wire 1 . i_a $end
       $var wire 1 + i_b $end
       $var wire 1 | i_c $end
       $var wire 1 / o_s $end
       $var wire 1 0 o_c $end
      $upscope $end
     $upscope $end
     $scope module HD2 $end
      $var wire 2 % i_data [1:0] $end
      $var wire 2 ~ i_exp_code [1:0] $end
      $var wire 2 ( o_hamming_distance [1:0] $end
      $var wire 1 * w_data_0 $end
      $var wire 1 1 w_data_1 $end
      $scope module FA $end
       $var wire 1 * i_a $end
       $var wire 1 1 i_b $end
       $var wire 1 | i_c $end
       $var wire 1 2 o_s $end
       $var wire 1 3 o_c $end
      $upscope $end
     $upscope $end
     $scope module HD3 $end
      $var wire 2 % i_data [1:0] $end
      $var wire 2 !! i_exp_code [1:0] $end
      $var wire 2 ) o_hamming_distance [1:0] $end
      $var wire 1 . w_data_0 $end
      $var wire 1 1 w_data_1 $end
      $scope module FA $end
       $var wire 1 . i_a $end
       $var wire 1 1 i_b $end
       $var wire 1 | i_c $end
       $var wire 1 4 o_s $end
       $var wire 1 5 o_c $end
      $upscope $end
     $upscope $end
    $upscope $end
    $scope module BUFFER $end
     $var wire 1 v i_clk $end
     $var wire 1 # i_rst_n $end
     $var wire 1 $ i_valid $end
     $var wire 2 & i_BM_0 [1:0] $end
     $var wire 2 ' i_BM_1 [1:0] $end
     $var wire 2 ( i_BM_2 [1:0] $end
     $var wire 2 ) i_BM_3 [1:0] $end
     $var wire 2 R i_PM_0 [1:0] $end
     $var wire 2 S i_PM_1 [1:0] $end
     $var wire 2 T i_PM_2 [1:0] $end
     $var wire 2 U i_PM_3 [1:0] $end
     $var wire 2 J o_BM_0 [1:0] $end
     $var wire 2 K o_BM_1 [1:0] $end
     $var wire 2 L o_BM_2 [1:0] $end
     $var wire 2 M o_BM_3 [1:0] $end
     $var wire 2 N o_PM_0 [1:0] $end
     $var wire 2 O o_PM_1 [1:0] $end
     $var wire 2 P o_PM_2 [1:0] $end
     $var wire 2 Q o_PM_3 [1:0] $end
     $var wire 1 I o_valid $end
    $upscope $end
    $scope module SPMU $end
     $var wire 1 v i_clk $end
     $var wire 1 # i_rst_n $end
     $var wire 1 I i_valid $end
     $var wire 2 R i_PM_0 [1:0] $end
     $var wire 2 S i_PM_1 [1:0] $end
     $var wire 2 T i_PM_2 [1:0] $end
     $var wire 2 U i_PM_3 [1:0] $end
     $var wire 1 H o_decision $end
     $var wire 1 b w_compare_0 $end
     $var wire 1 c w_compare_1 $end
     $scope module CP0 $end
      $var wire 2 R i_metric_path_0 [1:0] $end
      $var wire 2 T i_metric_path_1 [1:0] $end
      $var wire 1 b o_compare_less $end
     $upscope $end
     $scope module CP1 $end
      $var wire 2 S i_metric_path_0 [1:0] $end
      $var wire 2 U i_metric_path_1 [1:0] $end
      $var wire 1 c o_compare_less $end
     $upscope $end
     $scope module u_state_machine $end
      $var wire 1 v i_clk $end
      $var wire 1 # i_rst_n $end
      $var wire 1 I i_valid $end
      $var wire 1 b i_compare_0 $end
      $var wire 1 c i_compare_1 $end
      $var wire 1 H o_decision $end
      $var wire 2 { S0 [1:0] $end
      $var wire 2 } S1 [1:0] $end
      $var wire 2 ~ S2 [1:0] $end
      $var wire 2 !! S3 [1:0] $end
      $var wire 2 d state [1:0] $end
      $var wire 2 e nstate [1:0] $end
      $scope module NSL $end
       $var wire 1 I i_valid $end
       $var wire 1 b i_compare_0 $end
       $var wire 1 c i_compare_1 $end
       $var wire 2 d i_pre_state [1:0] $end
       $var wire 2 e o_next_state [1:0] $end
       $var wire 2 { S0 [1:0] $end
       $var wire 2 } S1 [1:0] $end
       $var wire 2 ~ S2 [1:0] $end
       $var wire 2 !! S3 [1:0] $end
      $upscope $end
      $scope module OL $end
       $var wire 2 d i_curr_state [1:0] $end
       $var wire 1 H o_decision_bit $end
       $var wire 2 { S0 [1:0] $end
       $var wire 2 } S1 [1:0] $end
       $var wire 2 ~ S2 [1:0] $end
       $var wire 2 !! S3 [1:0] $end
      $upscope $end
      $scope module SM $end
       $var wire 1 v i_clk $end
       $var wire 1 # i_rst_n $end
       $var wire 2 e i_next_state [1:0] $end
       $var wire 2 d o_curr_state [1:0] $end
       $var wire 2 { S0 [1:0] $end
       $var wire 2 } S1 [1:0] $end
       $var wire 2 ~ S2 [1:0] $end
       $var wire 2 !! S3 [1:0] $end
      $upscope $end
     $upscope $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
b00 %
b00 &
b01 '
b01 (
b10 )
0*
0+
0,
0-
1.
1/
00
11
12
03
04
15
b00 6
b00 7
b00 8
b00 9
b00 :
b00 ;
b00 <
b00 =
0>
0?
0@
0A
0B
0C
0D
0E
b00000000000000000000000000000000 F
b00000000000000000000000000000000 G
0H
0I
b00 J
b00 K
b00 L
b00 M
b00 N
b00 O
b00 P
b00 Q
b00 R
b00 S
b00 T
b00 U
b00 V
b00 W
1X
b00 Y
b00 Z
1[
b00 \
b00 ]
1^
b00 _
b00 `
1a
1b
1c
b00 d
b00 e
0f
0g
0h
b0000000000000000 i
b00 j
0k
0l
0m
0n
0o
0p
0q
b00000000 r
0s
b0000 t
b0001 u
0v
b00000000000000000000000000010000 w
b00000000000000000000000000000010 x
b00000000000000000000000000000001 y
b00000000000000000000000000001000 z
b00 {
0|
b01 }
b10 ~
b11 !!
#10000
b11 O
b11 P
b11 Q
b11 S
b11 U
b11 W
b11 Y
b11 Z
b11 ]
b11 _
b11 `
1v
#20000
1#
0v
#30000
1v
#40000
1$
0v
#50000
b11 %
b10 &
b00 )
1*
1+
1-
0.
01
05
1I
b10 J
b01 K
b01 L
b00 P
b10 R
b01 S
b01 U
b10 V
b01 Y
b01 _
0b
b10 e
1v
#51000
#60000
0v
#70000
b10 %
b01 &
b10 '
b00 (
b01 )
0*
1,
0-
1.
0/
10
02
14
1H
b01 J
b10 K
b00 L
b01 M
b10 N
b01 O
b01 Q
b00 S
b10 T
b11 V
b10 W
0X
b00 Y
b11 \
b10 ]
0^
b10 _
b01 `
0a
1b
b10 d
b01 e
1v
#71000
#80000
0v
#90000
b00 %
b00 &
b01 '
b01 (
b10 )
0+
0,
1/
00
11
12
04
15
0H
b00 J
b01 K
b01 L
b10 M
b00 O
b10 P
b10 S
b00 T
b10 U
b10 V
1X
b11 Y
b10 Z
0[
b00 ]
b11 _
b10 `
0b
b01 d
b10 e
1v
#91000
#100000
0v
#110000
b10 %
b01 &
b10 '
b00 (
b01 )
1+
1,
0/
10
01
02
14
05
1H
b01 J
b10 K
b00 L
b01 M
b10 O
b00 P
b10 Q
b11 R
b00 S
b11 T
b11 V
b11 W
b00 Y
b11 Z
1[
b11 ]
1^
b10 _
1a
1b
b10 d
b01 e
1v
#111000
#120000
0v
#130000
b00 %
b00 &
b01 '
b01 (
b10 )
0+
0,
1/
00
11
12
04
15
0H
b00 J
b01 K
b01 L
b10 M
b11 N
b00 O
b11 P
b10 R
b11 S
b00 T
b11 U
b10 W
0X
b11 Y
b00 ]
0^
b11 _
b11 `
0b
b01 d
b10 e
1v
#131000
#140000
0v
#150000
b10 %
b01 &
b10 '
b00 (
b01 )
1+
1,
0/
10
01
02
14
05
1H
b01 J
b10 K
b00 L
b01 M
b10 N
b11 O
b00 P
b11 Q
b11 R
b00 S
b11 T
b10 U
b11 W
1X
b00 Y
b11 ]
1^
b10 _
1b
b10 d
b01 e
1v
#151000
#160000
0v
#170000
b00 %
b00 &
b01 '
b01 (
b10 )
0+
0,
1/
00
11
12
04
15
0H
b00 J
b01 K
b01 L
b10 M
b11 N
b00 O
b11 P
b10 Q
b10 R
b11 S
b00 T
b11 U
b10 W
0X
b11 Y
b00 ]
0^
b11 _
0b
b01 d
b10 e
1v
#171000
#180000
0v
#190000
b10 %
b01 &
b10 '
b00 (
b01 )
1+
1,
0/
10
01
02
14
05
1H
b01 J
b10 K
b00 L
b01 M
b10 N
b11 O
b00 P
b11 Q
b11 R
b00 S
b11 T
b10 U
b11 W
1X
b00 Y
b11 ]
1^
b10 _
1b
b10 d
b01 e
1v
#191000
#200000
0v
#210000
0#
0$
0H
0I
b00 J
b00 K
b00 M
b00 N
b11 P
b00 R
b11 S
b00 T
b11 U
b00 V
b11 Y
b00 \
b11 _
b00 d
b00 e
1v
#220000
0v
#230000
1#
1v
#240000
0v
#250000
1$
1I
b01 J
b10 K
b01 M
b00 P
b01 R
b00 S
b01 T
b10 U
b01 V
b00 Y
b01 \
b10 _
1v
#260000
0v
#270000
b00 %
b00 &
b01 '
b01 (
b10 )
0+
0,
1/
00
11
12
04
15
b00 J
b01 K
b01 L
b10 M
b01 N
b00 O
b01 P
b10 Q
b10 S
b00 T
b10 W
b10 Y
b11 \
b00 ]
0^
0b
b10 e
1v
#271000
#280000
0v
#290000
1H
b10 O
b00 P
b01 S
b10 T
b01 U
b11 W
b01 Y
b10 ]
b01 _
1b
b10 d
b01 e
1v
#291000
#300000
0v
#310000
b11 %
b10 &
b00 )
1*
1+
1-
0.
01
05
0H
b10 J
b00 M
b01 O
b10 P
b01 Q
b10 S
b01 T
b10 U
b11 V
b01 W
0X
b11 Y
b10 Z
0[
b01 \
b11 ]
1^
b11 _
b10 `
0a
b01 d
b00 e
1v
#311000
#320000
0v
#330000
b10 %
b01 &
b10 '
b00 (
b01 )
0*
1,
0-
1.
0/
10
02
14
b01 J
b10 K
b00 L
b01 M
b10 O
b01 P
b10 Q
b10 R
b01 S
b10 T
b10 V
b11 W
1X
b01 Y
b11 Z
1[
b10 \
b00 d
1v
#331000
#340000
0v
#350000
b00 %
b00 &
b01 '
b01 (
b10 )
0+
0,
1/
00
11
12
04
15
b00 J
b01 K
b01 L
b10 M
b10 N
b01 O
b10 P
b11 S
b01 T
b11 U
b11 Y
b11 \
b01 ]
0^
b11 `
1a
0b
b10 e
1v
#351000
#360000
0v
#370000
b10 %
b01 &
b10 '
b00 (
b01 )
1+
1,
0/
10
01
02
14
05
1H
b01 J
b10 K
b00 L
b01 M
b11 O
b01 P
b11 Q
b11 R
b01 S
b11 T
b11 V
b01 Y
b11 ]
1^
1b
b10 d
b01 e
1v
#371000
#380000
0v
#390000
b11 %
b10 &
b01 '
b01 (
b00 )
1*
0,
1-
0.
1/
00
12
04
0H
b10 J
b01 K
b01 L
b00 M
b11 N
b01 O
b11 P
b01 R
b11 S
b01 W
0X
b11 Y
b01 d
b00 e
1v
#391000
#400000
0v
#410000
b01 N
b11 O
b11 R
b01 T
b11 W
1X
b01 \
0b
b00 d
b10 e
1v
#411000
#420000
0v
#430000
1H
b11 N
b01 P
b10 S
b11 T
b10 U
b10 Y
b11 \
b10 _
1b
b10 d
b01 e
1v
#440000
0v
#450000
0H
b10 O
b11 P
b10 Q
b10 R
b11 S
b11 U
b10 W
0X
b11 Y
b11 _
b01 d
b00 e
1v
#460000
0v
#470000
b10 N
b11 O
b11 Q
b11 R
b10 T
b11 W
1X
b10 \
0b
b00 d
b10 e
1v
#480000
0v
#490000
1H
b11 N
b10 P
b11 T
b11 \
1b
b10 d
b01 e
1v
#500000
0v
#510000
0H
b11 P
b01 d
b00 e
1v
#520000
0v
#530000
b00 d
1v
