$version Generated by VerilatedVcd $end
$timescale 1ps $end
 $scope module TOP $end
  $scope module tb_spmu $end
   $var wire 1 + i_clk $end
   $var wire 1 # i_rst_n $end
   $var wire 1 $ i_valid $end
   $var wire 2 % w_PM_0 [1:0] $end
   $var wire 2 & w_PM_1 [1:0] $end
   $var wire 2 ' w_PM_2 [1:0] $end
   $var wire 2 ( w_PM_3 [1:0] $end
   $var wire 1 , w_decision $end
   $scope module spmu $end
    $var wire 1 + i_clk $end
    $var wire 1 # i_rst_n $end
    $var wire 1 $ i_valid $end
    $var wire 2 % i_PM_0 [1:0] $end
    $var wire 2 & i_PM_1 [1:0] $end
    $var wire 2 ' i_PM_2 [1:0] $end
    $var wire 2 ( i_PM_3 [1:0] $end
    $var wire 1 , o_decision $end
    $var wire 1 ) w_compare_0 $end
    $var wire 1 * w_compare_1 $end
    $scope module CP0 $end
     $var wire 2 % i_metric_path_0 [1:0] $end
     $var wire 2 ' i_metric_path_1 [1:0] $end
     $var wire 1 ) o_compare_less $end
    $upscope $end
    $scope module CP1 $end
     $var wire 2 & i_metric_path_0 [1:0] $end
     $var wire 2 ( i_metric_path_1 [1:0] $end
     $var wire 1 * o_compare_less $end
    $upscope $end
    $scope module u_state_machine $end
     $var wire 1 + i_clk $end
     $var wire 1 # i_rst_n $end
     $var wire 1 $ i_valid $end
     $var wire 1 ) i_compare_0 $end
     $var wire 1 * i_compare_1 $end
     $var wire 1 , o_decision $end
     $var wire 2 / S0 [1:0] $end
     $var wire 2 0 S1 [1:0] $end
     $var wire 2 1 S2 [1:0] $end
     $var wire 2 2 S3 [1:0] $end
     $var wire 2 - state [1:0] $end
     $var wire 2 . nstate [1:0] $end
     $scope module NSL $end
      $var wire 1 $ i_valid $end
      $var wire 1 ) i_compare_0 $end
      $var wire 1 * i_compare_1 $end
      $var wire 2 - i_pre_state [1:0] $end
      $var wire 2 . o_next_state [1:0] $end
      $var wire 2 / S0 [1:0] $end
      $var wire 2 0 S1 [1:0] $end
      $var wire 2 1 S2 [1:0] $end
      $var wire 2 2 S3 [1:0] $end
     $upscope $end
     $scope module OL $end
      $var wire 2 - i_curr_state [1:0] $end
      $var wire 1 , o_decision_bit $end
      $var wire 2 / S0 [1:0] $end
      $var wire 2 0 S1 [1:0] $end
      $var wire 2 1 S2 [1:0] $end
      $var wire 2 2 S3 [1:0] $end
     $upscope $end
     $scope module SM $end
      $var wire 1 + i_clk $end
      $var wire 1 # i_rst_n $end
      $var wire 2 . i_next_state [1:0] $end
      $var wire 2 - o_curr_state [1:0] $end
      $var wire 2 / S0 [1:0] $end
      $var wire 2 0 S1 [1:0] $end
      $var wire 2 1 S2 [1:0] $end
      $var wire 2 2 S3 [1:0] $end
     $upscope $end
    $upscope $end
   $upscope $end
  $upscope $end
 $upscope $end
$enddefinitions $end


#0
0#
0$
b00 %
b00 &
b00 '
b00 (
1)
1*
0+
0,
b00 -
b00 .
b00 /
b01 0
b10 1
b11 2
#5000
1#
1+
#10000
0+
#15000
1$
b01 &
b10 '
b11 (
1+
#16000
#20000
0+
#25000
b11 %
b10 &
b01 '
b00 (
0)
0*
1+
1,
b10 -
b11 .
#26000
#30000
0+
#35000
b10 %
b00 &
b00 '
b01 (
1*
1+
0,
b01 -
b10 .
#36000
#40000
0+
#45000
b11 %
b01 '
b10 (
1+
1,
b10 -
b01 .
#46000
#50000
0+
#55000
b01 %
b10 &
b11 '
b00 (
1)
0*
1+
b11 -
b11 .
#56000
#60000
0+
#65000
b11 %
b01 '
0)
1+
#66000
#70000
0+
#75000
b00 &
b10 (
1*
1+
0,
b01 -
b10 .
#76000
#80000
0+
#85000
b00 %
b01 &
1)
1+
b00 -
b00 .
#86000
#90000
0+
#95000
1+
#100000
0+
#105000
1+
#110000
0+
#115000
1+
#120000
0+
#125000
1+
#130000
0+
#135000
1+
#140000
0+
#145000
1+
#150000
0+
#155000
1+
#160000
0+
#165000
1+
#170000
0+
#175000
1+
#180000
0+
#185000
1+
#186000
